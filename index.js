!function(e){var t={};function s(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,o){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(o,n,function(t){return e[t]}.bind(null,n));return o},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s(s.s=9)}([function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("validator")},function(e,t){e.exports=(e=>null==e||"object"==typeof e&&0===Object.keys(e).length||"string"==typeof e&&0===e.trim().length)},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("passport")},function(e,t,s){e.exports=s(16)},function(e,t,s){const o=s(0),n=new(0,o.Schema)({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0},avatar:{type:String},date:{type:Date,default:Date.now}});e.exports=User=o.model("users",n)},function(e,t,s){const o=s(0),n=o.Schema,r=new n({user:{type:n.Types.ObjectId,ref:"users"},handle:{type:String,required:!0,max:40},company:{type:String},website:{type:String},location:{type:String},status:{type:String,required:!0},skills:{type:[String],required:!0},bio:{type:String},githubusername:{type:String},experience:[{title:{type:String,required:!0},company:{type:String,required:!0},location:{type:String},from:{type:Date,required:!0},to:{type:Date},current:{type:Boolean,default:!1},description:{type:String}}],education:[{school:{type:String,required:!0},degree:{type:String,required:!0},fieldofstudy:{type:String,required:!0},from:{type:Date,required:!0},to:{type:Date},current:{type:Boolean,default:!1},description:{type:String}}],social:{youtube:{type:String},twitter:{type:String},facebook:{type:String},linkedin:{type:String},instagram:{type:String}},date:{type:Date,default:Date.now}});e.exports=Profile=o.model("profile",r)},function(e,t){e.exports=require("passport-jwt")},function(e,t,s){const o=s(3),n=s(0),r=s(10),i=s(4),a=s(11),d=s(12),u=s(19),l=s(23),c=o();c.use(r.urlencoded({extended:!1})),c.use(r.json());const p=s(5).mongoURI;n.connect(p,{useNewUrlParser:!0});const f=n.connection;f.on("error",console.error.bind(console,"connection error:")),f.once("open",()=>{console.log("mongoDB Up and Runnig")}),c.use(i.initialize()),s(26)(i),c.use("/api/users",d),c.use("/api/profile",u),c.use("/api/posts",l),c.use(o.static("build")),c.get("*",(e,t)=>{t.sendFile(a.resolve(__dirname,"build","index.html"))});const m=process.env.PORT||5e3;c.listen(m,()=>console.log(`Server running on port ${m}`))},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("path")},function(e,t,s){const o=s(3).Router(),n=s(13),r=s(14),i=s(15),a=s(5),d=s(4),u=s(17),l=s(18),c=s(6);o.get("/test",(e,t)=>t.json({msg:"Users Works"})),o.post("/register",(e,t)=>{const{errors:s,isValid:o}=u(e.body);if(!o)return t.status(400).json(s);c.findOne({email:e.body.email}).then(o=>{if(o)return s.email="Email already exists",t.status(400).json(s);{const s=n.url(e.body.email,{s:"200",r:"pg",d:"mm"}),o=new c({name:e.body.name,email:e.body.email,avatar:s,password:e.body.password});r.genSalt(10,(e,s)=>{r.hash(o.password,s,(e,s)=>{if(e)throw e;o.password=s,o.save().then(e=>t.json(e)).catch(e=>console.log(e))})})}})}),o.post("/login",(e,t)=>{const{errors:s,isValid:o}=l(e.body);if(!o)return t.status(400).json(s);const n=e.body.email,d=e.body.password;c.findOne({email:n}).then(e=>{if(!e)return s.email="User not found",t.status(404).json(s);r.compare(d,e.password).then(o=>{if(!o)return s.password="Password incorrect",t.status(400).json(s);{const s={id:e.id,name:e.name,avatar:e.avatar};i.sign(s,a.secretOrKey,{expiresIn:3600},(e,s)=>{t.json({success:!0,token:"Bearer "+s})})}})})}),o.get("/current",d.authenticate("jwt",{session:!1}),(e,t)=>{t.json({id:e.user.id,name:e.user.name,email:e.user.email})}),e.exports=o},function(e,t){e.exports=require("gravatar")},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports={mongoURI:"mongodb://127.0.0.1:27017/devconnector",secretOrKey:"secret"}},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.name=n(e.name)?"":e.name,e.email=n(e.email)?"":e.email,e.password=n(e.password)?"":e.password,e.password2=n(e.password2)?"":e.password2,o.isLength(e.name,{min:2,max:30})||(t.name="Name must be between 2 and 30 characters"),o.isEmpty(e.name)&&(t.name="Name field is required"),o.isEmpty(e.email)&&(t.email="Email field is required"),o.isEmail(e.email)||(t.email="Email is invalid"),o.isEmpty(e.password)&&(t.password="Password field is required"),o.isLength(e.password,{min:6,max:30})||(t.password="Password must be at least 6 characters"),o.isEmpty(e.password2)&&(t.password2="Confirm Password field is required"),o.equals(e.password,e.password2)||(t.password2="Passwords must match"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.email=n(e.email)?"":e.email,e.password=n(e.password)?"":e.password,o.isEmail(e.email)||(t.email="Email is invalid"),o.isEmpty(e.email)&&(t.email="Email field is required"),o.isEmpty(e.password)&&(t.password="Password field is required"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(3).Router(),n=(s(0),s(4)),r=s(20),i=s(21),a=s(22),d=s(7),u=s(6);o.get("/test",(e,t)=>t.json({msg:"Profile Works"})),o.get("/",n.authenticate("jwt",{session:!1}),(e,t)=>{const s={};d.findOne({user:e.user.id}).populate("user",["name","avatar"]).then(e=>{if(!e)return s.noprofile="There is no profile for this user",t.status(404).json(s);t.json(e)}).catch(e=>t.status(404).json(e))}),o.get("/all",(e,t)=>{const s={};d.find().populate("user",["name","avatar"]).then(e=>{if(!e)return s.noprofile="There are no profiles",t.status(404).json(s);t.json(e)}).catch(e=>t.status(404).json({profile:"There are no profiles"}))}),o.get("/handle/:handle",(e,t)=>{const s={};d.findOne({handle:e.params.handle}).populate("user",["name","avatar"]).then(e=>{e||(s.noprofile="There is no profile for this user",t.status(404).json(s)),t.json(e)}).catch(e=>t.status(404).json(e))}),o.get("/user/:user_id",(e,t)=>{const s={};d.findOne({user:e.params.user_id}).populate("user",["name","avatar"]).then(e=>{e||(s.noprofile="There is no profile for this user",t.status(404).json(s)),t.json(e)}).catch(e=>t.status(404).json({profile:"There is no profile for this user"}))}),o.post("/",n.authenticate("jwt",{session:!1}),(e,t)=>{const{errors:s,isValid:o}=r(e.body);if(!o)return t.status(400).json(s);const n={};n.user=e.user.id,e.body.handle&&(n.handle=e.body.handle),e.body.company&&(n.company=e.body.company),e.body.website&&(n.website=e.body.website),e.body.location&&(n.location=e.body.location),e.body.bio&&(n.bio=e.body.bio),e.body.status&&(n.status=e.body.status),e.body.githubusername&&(n.githubusername=e.body.githubusername),void 0!==e.body.skills&&(n.skills=e.body.skills.split(",")),n.social={},e.body.youtube&&(n.social.youtube=e.body.youtube),e.body.twitter&&(n.social.twitter=e.body.twitter),e.body.facebook&&(n.social.facebook=e.body.facebook),e.body.linkedin&&(n.social.linkedin=e.body.linkedin),e.body.instagram&&(n.social.instagram=e.body.instagram),d.findOne({user:e.user.id}).then(o=>{o?d.findOneAndUpdate({user:e.user.id},{$set:n},{new:!0}).then(e=>t.json(e)):d.findOne({handle:n.handle}).then(e=>{e&&(s.handle="That handle already exists",t.status(400).json(s)),new d(n).save().then(e=>t.json(e))})})}),o.post("/experience",n.authenticate("jwt",{session:!1}),(e,t)=>{const{errors:s,isValid:o}=i(e.body);if(!o)return t.status(400).json(s);d.findOne({user:e.user.id}).then(s=>{const o={title:e.body.title,company:e.body.company,location:e.body.location,from:e.body.from,to:e.body.to,current:e.body.current,description:e.body.description};s.experience.unshift(o),s.save().then(e=>t.json(e))})}),o.post("/education",n.authenticate("jwt",{session:!1}),(e,t)=>{const{errors:s,isValid:o}=a(e.body);if(!o)return t.status(400).json(s);d.findOne({user:e.user.id}).then(s=>{const o={school:e.body.school,degree:e.body.degree,fieldofstudy:e.body.fieldofstudy,from:e.body.from,to:e.body.to,current:e.body.current,description:e.body.description};s.education.unshift(o),s.save().then(e=>t.json(e))})}),o.delete("/experience/:exp_id",n.authenticate("jwt",{session:!1}),(e,t)=>{d.findOne({user:e.user.id}).then(s=>{const o=s.experience.map(e=>e.id).indexOf(e.params.exp_id);s.experience.splice(o,1),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json(e))}),o.delete("/education/:edu_id",n.authenticate("jwt",{session:!1}),(e,t)=>{d.findOne({user:e.user.id}).then(s=>{const o=s.education.map(e=>e.id).indexOf(e.params.edu_id);s.education.splice(o,1),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json(e))}),o.delete("/",n.authenticate("jwt",{session:!1}),(e,t)=>{d.findOneAndRemove({user:e.user.id}).then(()=>{u.findOneAndRemove({_id:e.user.id}).then(()=>t.json({success:!0}))})}),e.exports=o},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.handle=n(e.handle)?"":e.handle,e.status=n(e.status)?"":e.status,e.skills=n(e.skills)?"":e.skills,o.isLength(e.handle,{min:2,max:40})||(t.handle="Handle needs to between 2 and 4 characters"),o.isEmpty(e.handle)&&(t.handle="Profile handle is required"),o.isEmpty(e.status)&&(t.status="Status field is required"),o.isEmpty(e.skills)&&(t.skills="Skills field is required"),n(e.website)||o.isURL(e.website)||(t.website="Not a valid URL"),n(e.youtube)||o.isURL(e.youtube)||(t.youtube="Not a valid URL"),n(e.twitter)||o.isURL(e.twitter)||(t.twitter="Not a valid URL"),n(e.facebook)||o.isURL(e.facebook)||(t.facebook="Not a valid URL"),n(e.linkedin)||o.isURL(e.linkedin)||(t.linkedin="Not a valid URL"),n(e.instagram)||o.isURL(e.instagram)||(t.instagram="Not a valid URL"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.title=n(e.title)?"":e.title,e.company=n(e.company)?"":e.company,e.from=n(e.from)?"":e.from,o.isEmpty(e.title)&&(t.title="Job title field is required"),o.isEmpty(e.company)&&(t.company="Company field is required"),o.isEmpty(e.from)&&(t.from="From date field is required"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.school=n(e.school)?"":e.school,e.degree=n(e.degree)?"":e.degree,e.fieldofstudy=n(e.fieldofstudy)?"":e.fieldofstudy,e.from=n(e.from)?"":e.from,o.isEmpty(e.school)&&(t.school="School field is required"),o.isEmpty(e.degree)&&(t.degree="Degree field is required"),o.isEmpty(e.fieldofstudy)&&(t.fieldofstudy="Field of study field is required"),o.isEmpty(e.from)&&(t.from="From date field is required"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(3).Router(),n=(s(0),s(4)),r=s(24),i=s(7),a=s(25);o.get("/test",(e,t)=>t.json({msg:"Posts Works"})),o.get("/",(e,t)=>{r.find().sort({date:-1}).then(e=>t.json(e)).catch(e=>t.status(404).json({nopostsfound:"No posts found"}))}),o.get("/:id",(e,t)=>{r.findById(e.params.id).then(e=>t.json(e)).catch(e=>t.status(404).json({nopostfound:"No post found with that ID"}))}),o.post("/",n.authenticate("jwt",{session:!1}),(e,t)=>{const{errors:s,isValid:o}=a(e.body);if(!o)return t.status(400).json(s);new r({text:e.body.text,name:e.body.name,avatar:e.body.avatar,user:e.user.id}).save().then(e=>t.json(e))}),o.delete("/:id",n.authenticate("jwt",{session:!1}),(e,t)=>{i.findOne({user:e.user.id}).then(s=>{r.findById(e.params.id).then(s=>{if(s.user.toString()!==e.user.id)return t.status(401).json({notauthorized:"User not authorized"});s.remove().then(()=>t.json({success:!0}))}).catch(e=>t.status(404).json({postnotfound:"No post found"}))})}),o.post("/like/:id",n.authenticate("jwt",{session:!1}),(e,t)=>{i.findOne({user:e.user.id}).then(s=>{r.findById(e.params.id).then(s=>{if(s.likes.filter(t=>t.user.toString()===e.user.id).length>0)return t.status(400).json({alreadyliked:"User already liked this post"});s.likes.unshift({user:e.user.id}),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json({postnotfound:"No post found"}))})}),o.post("/unlike/:id",n.authenticate("jwt",{session:!1}),(e,t)=>{i.findOne({user:e.user.id}).then(s=>{r.findById(e.params.id).then(s=>{if(0===s.likes.filter(t=>t.user.toString()===e.user.id).length)return t.status(400).json({notliked:"You have not yet liked this post"});const o=s.likes.map(e=>e.user.toString()).indexOf(e.user.id);s.likes.splice(o,1),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json({postnotfound:"No post found"}))})}),o.post("/comment/:id",n.authenticate("jwt",{session:!1}),(e,t)=>{const{errors:s,isValid:o}=a(e.body);if(!o)return t.status(400).json(s);r.findById(e.params.id).then(s=>{const o={text:e.body.text,name:e.body.name,avatar:e.body.avatar,user:e.user.id};s.comments.unshift(o),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json({postnotfound:"No post found"}))}),o.delete("/comment/:id/:comment_id",n.authenticate("jwt",{session:!1}),(e,t)=>{r.findById(e.params.id).then(s=>{if(0===s.comments.filter(t=>t._id.toString()===e.params.comment_id).length)return t.status(404).json({commentnotexists:"Comment does not exist"});const o=s.comments.map(e=>e._id.toString()).indexOf(e.params.comment_id);s.comments.splice(o,1),s.save().then(e=>t.json(e))}).catch(e=>t.status(404).json({postnotfound:"No post found"}))}),e.exports=o},function(e,t,s){const o=s(0),n=o.Schema,r=new n({user:{type:n.Types.ObjectId,ref:"users"},text:{type:String,required:!0},name:{type:String},avatar:{type:String},likes:[{user:{type:n.Types.ObjectId,ref:"users"}}],comments:[{user:{type:n.Types.ObjectId,ref:"users"},text:{type:String,required:!0},name:{type:String},avatar:{type:String},date:{type:Date,default:Date.now}}],date:{type:Date,default:Date.now}});e.exports=Post=o.model("post",r)},function(e,t,s){const o=s(1),n=s(2);e.exports=function(e){let t={};return e.text=n(e.text)?"":e.text,o.isLength(e.text,{min:10,max:300})||(t.text="Post must be between 10 and 300 characters"),o.isEmpty(e.text)&&(t.text="Text field is required"),{errors:t,isValid:n(t)}}},function(e,t,s){const o=s(8).Strategy,n=s(8).ExtractJwt,r=s(0).model("users"),i=s(5),a={};a.jwtFromRequest=n.fromAuthHeaderAsBearerToken(),a.secretOrKey=i.secretOrKey,e.exports=(e=>{e.use(new o(a,(e,t)=>{r.findById(e.id).then(e=>t(null,e||!1)).catch(e=>console.log(e))}))})}]);